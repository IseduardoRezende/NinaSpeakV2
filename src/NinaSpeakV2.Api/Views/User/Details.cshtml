@using NinaSpeakV2.Api.Extensions
@using NinaSpeakV2.Api.Utils
@using NinaSpeakV2.Domain.ViewModels.Users
@model ReadUserViewModel

@{
    ViewData["Title"] = "Details";
}

<style>
    .popup-overlay {
        display: none; /* Escondido por padrão */
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 999;
    }

    .popup {
        display: none; /* Escondido por padrão */
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: #fff;
        padding: 20px;
        border-radius: 5px;
        z-index: 1000;
    }

    .close-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        font-size: 24px;
        cursor: pointer;
    }

    .popup-content {
        text-align: center;
    }
</style>

<div class="container mt-4">
    <h1 class="text-center mb-4"><i class="fa fa-street-view"></i> @Model.Email</h1>
    <div class="card shadow-sm">
        <div class="card-header text-center">
            <h4 class="mb-0">Ações</h4>
        </div>
        <div class="card-body d-flex justify-content-center flex-wrap">
            <a asp-action="Edit" asp-route-id="@User.GetCurrentUserId()" class="btn btn-outline-primary mx-2 my-1" role="button" aria-label="Editar Email"><i class="fa fa-envelope"></i> Editar Email</a>
            <a asp-action="EditPassword" asp-route-id="@User.GetCurrentUserId()" class="btn btn-outline-success mx-2 my-1" role="button" aria-label="Editar Senha"><i class="fa fa-lock"></i> Editar Senha</a>                                    
            <a class="btn btn-outline-danger mx-2 my-1" id="show-exit-popup" role="button" aria-label="Deletar Conta"><i class="fa fa-trash"></i> Deletar Conta</a>
        </div>
        <br />
    </div>
    <div class="popup-overlay" id="popup-exit-overlay"></div>
    <div class="popup" id="popup-exit">
        <span class="close-btn" id="close-exit-btn">&times;</span>
        <div class="popup-content">
            <h2 class="text-center">Deletar Conta&nbsp;</h2>
            <hr />
            <p>
                Tem certeza que deseja deletar sua conta ?
                <br /><br />
                <strong>Não será mais possível acessar o site e todas as suas informações serão excluídas.</strong>
            </p>
            <hr />
            <div class="text-center">
                <div class="input-group-append d-flex w-100 items-center justify-content-center">
                    <button class="btn btn-secondary" id="close-exit-btn-confirm">Cancelar</button>&nbsp;
                    <form asp-action="Delete">
                        <input type="hidden" name="Id" value="@User.GetCurrentUserId()" />
                        <input type="submit" value="Deletar" class="btn btn-danger" />
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="text-center mt-4">
        <a asp-controller="Home" asp-action="Index" class="btn btn-primary" role="button" aria-label="Voltar"><i class="bi bi-arrow-left"></i> Voltar</a>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', (event) => {
            // Seleciona os elementos de saída
            const showExitPopupButton = document.getElementById('show-exit-popup');
            const popupExit = document.getElementById('popup-exit');
            const closeExitButton = document.getElementById('close-exit-btn');
            const closeButtonConfirm = document.getElementById('close-exit-btn-confirm');
            const popupExitOverlay = document.getElementById('popup-exit-overlay');

            // Adiciona evento de clique ao botão para mostrar o pop-up de saída
            showExitPopupButton.addEventListener('click', () => {
                popupExit.style.display = 'block';
                popupExitOverlay.style.display = 'block';
            });

            // Adiciona evento de clique ao botão de fechar para ocultar o pop-up de saída
            closeExitButton.addEventListener('click', () => {
                popupExit.style.display = 'none';
                popupExitOverlay.style.display = 'none';
            });

            // Adiciona evento de clique ao botão de cancelar para ocultar o pop-up de saída
            closeButtonConfirm.addEventListener('click', () => {
                popupExit.style.display = 'none';
                popupExitOverlay.style.display = 'none';
            });

            // Adiciona evento de clique ao overlay para ocultar o pop-up de saída
            popupExitOverlay.addEventListener('click', () => {
                popupExit.style.display = 'none';
                popupExitOverlay.style.display = 'none';
            });
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
