@using NinaSpeakV2.Api.Extensions
@using NinaSpeakV2.Api.Utils
@using NinaSpeakV2.Domain.Entities
@using NinaSpeakV2.Domain.ViewModels.UsersInstitutions
@model IList<UpdateUserInstitutionViewModel>

@{
    ViewData["Title"] = "Edit";
}

<h1>Configurar Instituição: <strong>@Model.First().InstitutionName</strong></h1>

<h4>Membros</h4>
<hr />

<div class="row">
    <div class="col-md-12">
        @Html.Partial(Constant.PartialViewNameBaseErrors, ViewData[Constant.ViewDataBaseErrors] as IEnumerable<BaseError>)
        <form asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <table class="table">
                <thead>
                    <tr>
                        <th>Membro</th>
                        <th>Proprietárioª</th>
                        <th>Escritorª</th>
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.Count; i++)
                    {
                        <tr>
                            <td>
                                <input type="hidden" asp-for="@Model[i].UserEmail" name="[@i].UserEmail" />
                                @Model[i].UserEmail
                            </td>
                            <!-- O próprio usuário não pode se configurar ou configurar oª criadorª da instituição -->
                            @if (User.GetCurrentUserId() == @Model[i].UserFk || Model[i].Creator)
                            {
                                <td>
                                    @Html.DisplayFor(model => @Model[i].Owner)
                                    <input type="hidden" asp-for="@Model[i].Owner" name="[@i].Owner" />
                                </td>
                                <td>
                                    @Html.DisplayFor(model => @Model[i].Writer)
                                    <input type="hidden" asp-for="@Model[i].Writer" name="[@i].Writer" />
                                </td>
                                <td>
                                    <a href="#" class="btn alert-dark">Expulsar</a>
                                </td>
                            }
                            else
                            {
                                <td>
                                    <input asp-for="@Model[i].Owner" type="checkbox" name="[@i].Owner" />
                                </td>
                                <td>
                                    <input asp-for="@Model[i].Writer" type="checkbox" name="[@i].Writer" />
                                </td>
                                <td>
                                    <a asp-action="Delete" asp-route-userId="@Model[i].UserFk" asp-route-institutionId="@Model.First().InstitutionFk"
                                       class="btn btn-danger">
                                        Expulsar
                                    </a>
                                </td>
                            }
                            <input type="hidden" asp-for="@Model[i].UserFk" name="[@i].UserFk" />
                            <input type="hidden" asp-for="@Model[i].Creator" name="[@i].Creator" />
                            <input type="hidden" asp-for="@Model[i].InstitutionFk" name="[@i].InstitutionFk" />
                            <input type="hidden" asp-for="@Model[i].InstitutionName" name="[@i].InstitutionName" />
                        </tr>
                    }
                </tbody>
            </table>
            <div class="form-group text-center">
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="Institution" asp-action="Edit" asp-route-id="@Model.First().InstitutionFk">Voltar</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
