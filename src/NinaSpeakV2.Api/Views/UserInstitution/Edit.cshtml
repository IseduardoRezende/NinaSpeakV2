@using NinaSpeakV2.Api.Extensions
@using NinaSpeakV2.Api.Utils
@using NinaSpeakV2.Domain.Entities
@using NinaSpeakV2.Domain.ViewModels.UsersInstitutions
@model IList<UpdateUserInstitutionViewModel>

@{
    ViewData["Title"] = "Edit";
    var antiForgeryToken = @Html.AntiForgeryToken().ToString();
}

<h1 class="text-center my-4">Configurar Membros de <strong>@Model.First().InstitutionName</strong></h1>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            @Html.Partial(Constant.PartialViewNameBaseErrors, ViewData[Constant.ViewDataBaseErrors] as IEnumerable<BaseError>)
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                <div class="card shadow-sm">
                    <div class="card-body">
                        <table class="table table-hover">
                            <thead class="thead-dark">
                                <tr>
                                    <th>Membro</th>
                                    <th class="text-center">Proprietárioª</th>
                                    <th class="text-center">Escritorª</th>
                                    <th class="text-center">Ações</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (var i = 0; i < Model.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            <input type="hidden" asp-for="@Model[i].UserEmail" name="[@i].UserEmail" />
                                            @Model[i].UserEmail
                                        </td>
                                        <!-- O próprio usuário não pode se configurar ou configurar oª criadorª da instituição -->
                                        @if (User.GetCurrentUserId() == @Model[i].UserFk || Model[i].Creator)
                                        {
                                            <td class="text-center">
                                                @Html.DisplayFor(model => @Model[i].Owner)
                                                <input type="hidden" asp-for="@Model[i].Owner" name="[@i].Owner" />
                                            </td>
                                            <td class="text-center">
                                                @Html.DisplayFor(model => @Model[i].Writer)
                                                <input type="hidden" asp-for="@Model[i].Writer" name="[@i].Writer" />
                                            </td>
                                            <td class="text-center">
                                                <button class="btn btn-secondary" disabled>Remover</button>
                                            </td>
                                        }
                                        else
                                        {
                                            <td class="text-center">
                                                <input asp-for="@Model[i].Owner" type="checkbox" name="[@i].Owner" class="form-check-input" />
                                            </td>
                                            <td class="text-center">
                                                <input asp-for="@Model[i].Writer" type="checkbox" name="[@i].Writer" class="form-check-input" />
                                            </td>
                                            <td class="text-center">
                                                <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal" data-user-id="@Model[i].UserFk">
                                                    Remover
                                                </button>
                                            </td>
                                        }
                                        <input type="hidden" asp-for="@Model[i].UserFk" name="[@i].UserFk" />
                                        <input type="hidden" asp-for="@Model[i].Creator" name="[@i].Creator" />
                                        <input type="hidden" asp-for="@Model[i].InstitutionFk" name="[@i].InstitutionFk" />
                                        <input type="hidden" asp-for="@Model[i].InstitutionName" name="[@i].InstitutionName" />
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <div class="form-group text-center">
                            <input type="submit" value="Salvar" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
                <div>
                    <a asp-controller="Institution" asp-action="Edit" asp-route-id="@Model.First().InstitutionFk" class="btn-link">Voltar</a>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal de Confirmação -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title w-100 text-center" id="confirmDeleteModalLabel">Confirmar Remoção</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body w-100 text-center">
                Tem certeza de que deseja remover?
                <br /><br />
                <strong>Membro não poderá mais acessar nada relacionado a Instituição.</strong>
            </div>
            <div class="modal-footer">
                <div class="w-100 text-center">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" id="confirmDeleteButton" class="btn btn-danger">Remover</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var confirmDeleteModal = document.getElementById('confirmDeleteModal');
        var userIdToDelete = null;
        var antiForgeryToken = '@Html.AntiForgeryToken()'.split('value="')[1].split('"')[0]; // Obter o token anti-falsificação

        confirmDeleteModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            userIdToDelete = button.getAttribute('data-user-id');
        });

        document.getElementById('confirmDeleteButton').addEventListener('click', function () {
            if (userIdToDelete) {
                var form = document.createElement('form');
                form.method = 'post';
                form.action = '@Url.Action("OwnerDelete")';

                // Adicionar token anti-falsificação
                var antiForgeryInput = document.createElement('input');
                antiForgeryInput.type = 'hidden';
                antiForgeryInput.name = '__RequestVerificationToken';
                antiForgeryInput.value = antiForgeryToken;
                form.appendChild(antiForgeryInput);

                var userFkInput = document.createElement('input');
                userFkInput.type = 'hidden';
                userFkInput.name = 'userId';
                userFkInput.value = userIdToDelete;
                form.appendChild(userFkInput);

                var institutionFkInput = document.createElement('input');
                institutionFkInput.type = 'hidden';
                institutionFkInput.name = 'institutionId';
                institutionFkInput.value = '@Model.First().InstitutionFk';
                form.appendChild(institutionFkInput);

                document.body.appendChild(form);
                form.submit();
            }
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
